name: Development Backend Build and Deploy
on:
  repository_dispatch:
    types: [trigger-backend-build-dev]
jobs:
  #############################################  DEV ENV #############################################
  backend-build-deploy-dev:
    name: Backend Build Deploy Development Env Job
    runs-on: ubuntu-latest
    if: github.event.client_payload.branch == 'development'
    environment: development
    steps:
      - uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: 12.x
      - name: Get Package Version
        uses: martinbeentjes/npm-get-version-action@v1.1.0
        id: package-version
        with:
          path: backend/packages/Upgrade
      - name: Generate Changelogs
        run: |
          echo 'SLACK_CHANGELOG<<EOF' >> $GITHUB_ENV
          git log --color=never --pretty='tformat:%xe2%x80%xa2 `%h` %s (%an)' ${{github.event.client_payload.before}}..${{github.event.client_payload.after}} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          echo 'RELEASE_CHANGELOG<<EOF' >> $GITHUB_ENV
          git log --color=never --pretty=' - %h %s' ${{github.event.client_payload.before}}..${{github.event.client_payload.after}} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      #############################################  Build Steps #############################################
      - name: Build
        working-directory: backend
        run: |
           npm ci
           zip -qq -r upgrade-backend-v-${{ github.sha }}.zip node_modules packages/Upgrade Dockerfile Dockerrun.aws.json package.json tsconfig.json tslint.json
       
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: backend/upgrade-backend-v-${{ github.sha }}.zip
          tag: upgrade-backend-v-${{ github.sha }}
          name: UpGrade Backend ${{ github.sha }}
          body: ${{ env.RELEASE_CHANGELOG }}
          commit: main
          token: ${{ secrets.GITHUB_TOKEN }}
       
      - name: Trigger Deployment Workflow
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_DISPATCH_TOKEN }}
          repository: ${{ github.repository }}
          event-type: trigger-backend-deployment
          client-payload: '{"tag": "upgrade-backend-v-${{ github.sha }}"}'

      - name: Success Slack Message
        uses: aibexhq/slack-rich-notify@v2.0.1
        with:
          token: ${{ secrets.SLACK_TOKEN }}
          channel: ${{ secrets.SLACK_BUILD_CHANNEL }}
          message: |
            *<https://github.com/${{ github.event.repository.full_name }}/releases/tag/upgrade-backend-v-${{ github.sha }}|UpGrade Backend V-${{ github.sha }}> build was successful*
            ${{ env.SLACK_CHANGELOG }}

      - name: Failure Slack Message
        uses: aibexhq/slack-rich-notify@v2.0.1
        if: failure()
        with:
          token: ${{ secrets.SLACK_TOKEN }}
          channel: ${{ secrets.SLACK_BUILD_CHANNEL }}
          message: |
            ${{ secrets.SLACK_FAILURE_PINGS}} *UpGrade Backend V-${{ github.sha }} build FAILURE*
            <https://github.com/${{ github.event.repository.full_name }}/actions/runs/${{ github.run_id }}|Click here to view the full log>
            ${{ env.SLACK_CHANGELOG }}
      
      #############################################  Deployment Steps #############################################
      - name: Deploy to DEV
        id: deploy-backend
        uses: einaregilsson/beanstalk-deploy@v13
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APP_NAME }}
          environment_name: ${{ secrets.EB_ENV_NAME }}
          version_label: ${{ github.sha }}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: backend/upgrade-backend-v-${{ github.sha}}.zip

      - name: Success Deploy Message
        uses: aibexhq/slack-rich-notify@v2.0.1
        with:
          token: ${{ secrets.SLACK_TOKEN }}
          channel: ${{ secrets.SLACK_DEPLOY_CHANNEL }}
          message: |
            *<https://github.com/${{ github.event.repository.full_name }}/releases/tag/upgrade-backend-v-${{ github.sha }}|UpGrade Backend V-${{ github.sha }}>* has been deployed to the `development` environment at ${{ secrets.ENV_URL}}
            ${{ env.SLACK_CHANGELOG }}

      - name: Failure Deploy Message
        uses: aibexhq/slack-rich-notify@v2.0.1
        if: failure() && steps.deploy-backend.outcome == 'failure'
        with:
          token: ${{ secrets.SLACK_TOKEN }}
          channel: ${{ secrets.SLACK_DEPLOY_CHANNEL }}
          message: |
            ${{ secrets.SLACK_FAILURE_PINGS}} *<https://github.com/${{ github.event.repository.full_name }}/releases/tag/upgrade-backend-v-${{ github.sha }}|UpGrade Backend V-${{ github.sha }}> deployment FAILURE*
            <https://github.com/${{ github.event.repository.full_name }}/actions/runs/${{ github.run_id }}|Click here to view the full log>
            ${{ env.SLACK_CHANGELOG }}
  
  #############################################  BSNL ENV #############################################
  backend-build-deploy-bsnl:
    name: Backend Build Deploy BSNL Env Job
    runs-on: ubuntu-latest
    if: github.event.client_payload.branch == 'bsnl'
    environment: bsnl
    steps:
      - uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: 12.x
      - name: Get Package Version
        uses: martinbeentjes/npm-get-version-action@v1.1.0
        id: package-version
        with:
          path: backend/packages/Upgrade
      - name: Generate Changelogs
        run: |
          echo 'SLACK_CHANGELOG<<EOF' >> $GITHUB_ENV
          git log --color=never --pretty='tformat:%xe2%x80%xa2 `%h` %s (%an)' ${{github.event.client_payload.before}}..${{github.event.client_payload.after}} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          echo 'RELEASE_CHANGELOG<<EOF' >> $GITHUB_ENV
          git log --color=never --pretty=' - %h %s' ${{github.event.client_payload.before}}..${{github.event.client_payload.after}} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      #############################################  Build Steps #############################################
      - name: Build
        working-directory: backend
        run: |
           npm ci
           zip -qq -r upgrade-backend-v-${{ github.sha }}.zip node_modules packages/Upgrade Dockerfile Dockerrun.aws.json package.json tsconfig.json tslint.json
       
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: backend/upgrade-backend-v-${{ github.sha }}.zip
          tag: upgrade-backend-v-${{ github.sha }}
          name: UpGrade Backend ${{ github.sha }}
          body: ${{ env.RELEASE_CHANGELOG }}
          commit: main
          token: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Trigger Deployment Workflow
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_DISPATCH_TOKEN }}
          repository: ${{ github.repository }}
          event-type: trigger-backend-deployment
          client-payload: '{"tag": "upgrade-backend-v-${{ github.sha }}"}'

      - name: Success Slack Message
        uses: aibexhq/slack-rich-notify@v2.0.1
        with:
          token: ${{ secrets.SLACK_TOKEN }}
          channel: ${{ secrets.SLACK_BUILD_CHANNEL }}
          message: |
            *<https://github.com/${{ github.event.repository.full_name }}/releases/tag/upgrade-backend-v-${{ github.sha }}|UpGrade Backend V-${{ github.sha }}> build was successful*
            ${{ env.SLACK_CHANGELOG }}

      - name: Failure Slack Message
        uses: aibexhq/slack-rich-notify@v2.0.1
        if: failure()
        with:
          token: ${{ secrets.SLACK_TOKEN }}
          channel: ${{ secrets.SLACK_BUILD_CHANNEL }}
          message: |
            ${{ secrets.SLACK_FAILURE_PINGS}} *UpGrade Backend V-${{ github.sha }} build FAILURE*
            <https://github.com/${{ github.event.repository.full_name }}/actions/runs/${{ github.run_id }}|Click here to view the full log>
            ${{ env.SLACK_CHANGELOG }}

      #############################################  Deployment Steps #############################################
      - name: Deploy to BSNL
        id: deploy-backend
        uses: einaregilsson/beanstalk-deploy@v13
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APP_NAME }}
          environment_name: ${{ secrets.EB_ENV_NAME }}
          version_label: ${{ github.sha }}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: backend/upgrade-backend-v-${{ github.sha}}.zip

      - name: Success Deploy Message
        uses: aibexhq/slack-rich-notify@v2.0.1
        with:
          token: ${{ secrets.SLACK_TOKEN }}
          channel: ${{ secrets.SLACK_DEPLOY_CHANNEL }}
          message: |
            *<https://github.com/${{ github.event.repository.full_name }}/releases/tag/upgrade-backend-v-${{ github.sha }}|UpGrade Backend V-${{ github.sha }}>* has been deployed to the `BSNL` environment at ${{ secrets.ENV_URL}}
            ${{ env.SLACK_CHANGELOG }}

      - name: Failure Deploy Message
        uses: aibexhq/slack-rich-notify@v2.0.1
        if: failure() && steps.deploy-backend.outcome == 'failure'
        with:
          token: ${{ secrets.SLACK_TOKEN }}
          channel: ${{ secrets.SLACK_DEPLOY_CHANNEL }}
          message: |
            ${{ secrets.SLACK_FAILURE_PINGS}} *<https://github.com/${{ github.event.repository.full_name }}/releases/tag/upgrade-backend-v-${{ github.sha }}|UpGrade Backend V-${{ github.sha }}> deployment FAILURE*
            <https://github.com/${{ github.event.repository.full_name }}/actions/runs/${{ github.run_id }}|Click here to view the full log>
            ${{ env.SLACK_CHANGELOG }}
  
