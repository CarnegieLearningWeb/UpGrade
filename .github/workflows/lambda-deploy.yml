name: Lambda Deploy
on:
  workflow_call:
    inputs:
      function_name:
        required: true
        type: string
      version:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      token:
        required: true
  workflow_dispatch:
    inputs:
      function_name:
        description: Name of the lambda function to deploy to
        required: true
        type: string
      version:
        description: Version to use for this deployment
        required: true
        type: string
jobs:
  lambda-deploy:
    name: Lambda Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Check if tag exists
        id: check-tag
        uses: mukunku/tag-exists-action@v1.0.0
        with:
          tag: ${{ inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.token || secrets.GITHUB_TOKEN }}

      # If the tag already exists, just download the artifact from that release
      - name: Download Release Artifact
        if: steps.check-tag.outputs.exists == 'true'
        uses: robinraju/release-downloader@v1.3
        with:
          repository: CarnegieLearningWeb/UpGrade
          tag: ${{ inputs.version }}
          fileName: upgrade-lambda-${{ inputs.version }}.zip

      # Otherwise, build the artifact
      - name: Git Checkout
        if: steps.check-tag.outputs.exists == 'false'
        uses: actions/checkout@v2
      - name: Build Lambda
        if: steps.check-tag.outputs.exists == 'false'
        uses: ./.github/actions/generic-npm-build
        with:
          working_directory: backend/packages/Schedular
          version: ${{ inputs.version }}
      - name: Copy Files
        if: steps.check-tag.outputs.exists == 'false'
        working-directory: backend/packages/Schedular
        run: |
          mkdir lib
          cp -a node_modules/ lib/node_modules
          cp -a dist/schedule lib/schedule
      - name: Package
        if: steps.check-tag.outputs.exists == 'false'
        working-directory: backend/packages/Schedular/lib
        run: |
          zip -r upgrade-lambda-v${{ inputs.version }}.zip *
          mv upgrade-lambda-v${{ inputs.version }}.zip ../../../..

      - name: Deploy
        uses: appleboy/lambda-action@v0.1.5
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: ${{ inputs.function_name }}
          zip_file: upgrade-lambda-v${{ inputs.version }}.zip