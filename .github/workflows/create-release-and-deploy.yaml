name: Create Release And Deploy
on:
  push:
    branches:
      - master
    paths:
      - .github/**
      - packages/Upgrade/**
      - Docker*
      - package*.json
jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: phips28/gh-action-bump-version@v8.0.7
        with:
          tag-prefix: upgrade-backend-
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGEJSON_DIR: packages/Upgrade
      - uses: martinbeentjes/npm-get-version-action@v1.1.0
        id: package-version
        with:
          path: packages/Upgrade
      - uses: Bullrich/generate-release-changelog@2.0.1
        id: changelog
        env:
          REPO: ${{ github.repository }}
      - run: npm install
      - uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r upgrade-backend-v${{ steps.package-version.outputs.current-version}}.zip node_modules packages/Upgrade Dockerfile Dockerrun.aws.json package.json tsconfig.json tslint.json
      - uses: ncipollo/release-action@v1
        with:
          artifacts: upgrade-backend-v${{ steps.package-version.outputs.current-version}}.zip
          tag: upgrade-backend-v${{ steps.package-version.outputs.current-version}}
          name: UpGrade Backend ${{ steps.package-version.outputs.current-version}}
          body: ${{ steps.changelog.outputs.changelog }}
          commit: master
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to QA
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          sudo apt-get update && sudo apt-get -y install awscli
          aws s3 cp upgrade-backend-${{ steps.package-version.outputs.current-version}}.zip s3://${{ secrets.S3_BUCKET }}/
          aws elasticbeanstalk --region ${{ secrets.AWS_REGION }} create-application-version --application-name ${{ secrets.EB_APP_NAME }} --version-label ${{ steps.package-version.outputs.current-version}} --source-bundle S3Bucket=${{ secrets.S3_BUCKET }},S3Key=upgrade-backend-v${{ steps.package-version.outputs.current-version}}.zip
          aws elasticbeanstalk --region ${{ secrets.AWS_REGION }} update-environment --application-name ${{ secrets.EB_APP_NAME }} --environment-name ${{ secrets.EB_ENV_NAME }} --version-label ${{ steps.package-version.outputs.current-version}}